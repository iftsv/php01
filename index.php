<!DOCTYPE html>
<html lang="ru">
	<head>
		<meta charset="UTF-8">
		<title>Урок 1. Домашнее задание</title>
	</head>
	<body>
		<?php
		echo "<h1>Урок 1. Домашнее задание</h1>";
		echo "<h2>Задача 1. Установить программное обеспечение: веб -сервер, базу данных, интерпретатор, текстовый редактор и проверить, что всё работает правильно.</h2>";
		echo "Установил программное обеспечение XAMPP";
		echo "<br>";
		echo "<h2>Задача 2. Выполнить примеры из методички, разобраться, как это работает.</h2>";
		$a = 10;
		echo "\$a = $a<br>";
		$a = ++$a;
		echo "\$a = $a<br>";
		echo "<hr> Экранирование <br>";
		$str="самый лучший день \"СЕГОДНЯ\" Ура!";
		echo $str;
		echo "<hr> Константы <br>";
		define('MY_FIRST_CONST', 100);
		echo "<hr>", MY_FIRST_CONST;
		echo "<hr> Системы счисления <br>";
		$int10 = 42;
		$int2 = 0b101010;
		$int8 = 052;
		$int16 = 0x2A;
		echo "Десятеричная система $int10 <br>";
		echo "Двоичная система $int2 <br>";
		echo "Восьмеричная система $int8 <br>";
		echo "Шестнадцатеричная система $int16 <br>";
		echo "<hr>";
		$a = 1;
		echo "$a<br>";
		echo 'a';
		echo "<hr> Приведение типов <br>";
		$b = 10;
		$b = (boolean) $b;
		echo $b;
		echo "<hr> Конкатенация строк <br>";
		$a = 'Hello, ';
		$b = 'world!';
		$c = $a . $b;
		echo $c;
		echo "<hr> Математические операции <br>";
		$a = 4;
		$b = 5;
		echo $a + $b . '<br>' ; // сложение
		echo $a * $b . '<br>' ; // умножение
		echo $a - $b . '<br>' ; // вычитание
		echo $a / $b . '<br>' ; // деление
		echo $a % $b . '<br>' ; // остаток от деления
		echo $a ** $b . '<br>' ; // возведение в степень
		echo "<hr> Операции сравнения <br>";
		$a = 4;
		$b = 5;
		var_dump($a);
		echo "<br>";
		var_dump($b);
		echo "<br> $a == $b ";
		var_dump($a == $b); // Сравнение по значению
		echo "<br> $a === $b ";
		var_dump($a === $b); // Сравнение по значению и типу
		echo "<br> $a > $b ";
		var_dump($a > $b); // Больше
		echo "<br> $a < $b ";
		var_dump($a < $b); // Меньше
		echo "<br> $a <> $b ";
		var_dump($a <> $b); // Не равно
		echo "<br> $a != $b ";
		var_dump($a != $b); // Не равно
		echo "<br> $a !== $b ";
		var_dump($a !== $b); // Не равно без приведения типов
		echo "<br> $a <= $b ";
		var_dump($a <= $b); // Меньше или равно
		echo "<br> $a >= $b ";
		var_dump($a >= $b); // Больше или равно
		echo "<br>";
		echo "<h2>Задача 3. Объяснить, как работает данный код:</h2>";
		$a = 5;
		var_dump($a);
		echo "<br>";
		$b = '05';
		var_dump($b);
		echo "<br>3.1 <b>$a == $b</b> будет True, потому что работает автоматическое приведение типов. Строка приводится к числу. Так же используется операция сравнения по значению ==, если бы использовалась другая операция сравнение по значению и типу === то был бы <b>False</b><br>";
		var_dump ($a == $b); // Почему true?
		echo "<br>3.2 <b>(int)'012345'</b> будет 12345, потому что работает явное приведение типов, мы явно указываем тип через использование int в круглых скопках перед значением<br>";
		var_dump ((int)'012345'); // Почему 12345?
		echo "<br>3.3 <b>(float)123.0 === (int)123.0</b> будет False потому, что здесь выполняем операцию сравнения по значению и типу, а типы не совпадают float != int<br>";
		var_dump ((float)123.0 === (int)123.0); // Почему false?
		echo "<br>3.4 <b>(int) 0 === (int)'hello, world'</b> будет True, потому что (int)'hello world' возвращает после приведения 0, если бы строка в начале содержала цифру, то, например (int)'1hello world' вернул бы 1 и код вернул бы False<br>";
		var_dump ((int)0 === (int)'hello, world'); // Почему true?
		echo "<br>";
		?>
	</body>
</html>